services:
  publisher:
    build: publisher
    ports:
      - "80:80"
    volumes:
      - ./publisher:/usr/src/app
    networks:
      - nats-streaming-net
    stdin_open: true
    tty: true
  nats-streaming:
    # TODO: exaxt version of image
    image: "nats-streaming:latest"
    command:
      - "--cluster"
      - "nats://0.0.0.0:6222"
      - "--cluster_id"
      - nats-streaming
      - "--clustered"
      - "--cluster_bootstrap"
      - "--cluster_log_path"
      - /data/log
      - "--cluster_node_id"
      - nats-streaming-node
      - "--cluster_raft_logging"
      - "--debug"
      - "--dir"
      - /data/msg
      - "--http_port"
      - "8222"
      - "--port"
      - "4222"
      - "--store"
      - file
      - "--stan_debug"
      - "--hb_interval"
      - 2s
      - "--hb_fail_count"
      - "1"
      - "--hb_timeout"
      - 5s
    networks:
      - nats-streaming-net
    ports:
      - "4222:4222"
      - "8222:8222"
    restart: on-failure
  postgres:
    # TODO: exaxt version of image
    image: "postgres:latest"
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "user"
      #TODO: скрыть данные
      POSTGRES_PASSWORD: "password"
    ports:
      - "5432:5432"
    volumes:
      - ./mnt/pg:/var/lib/postgres
    networks:
      - pg-net
    restart: unless-stopped
  admin:
    image: dpage/pgadmin4
    #todo move into external
    environment:
      - "PGADMIN_DEFAULT_EMAIL=user@domain.com"
      - "PGADMIN_DEFAULT_PASSWORD=secret"
    ports:
      - "5050:80"
    volumes:
      - ./mnt/pgadmin:/var/lib/pgadmin
    networks:
      - pg-net
    restart: unless-stopped
networks:
  pg-net:
    driver: bridge
  nats-streaming-net:
    driver: bridge
